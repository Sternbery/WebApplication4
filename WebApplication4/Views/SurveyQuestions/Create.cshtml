@model WebApplication4.Models.SurveyQuestion

@{
    ViewBag.Title = "Create";
    var SurveyIDs = ViewBag.SurveyID;
    var SurveyName = ViewBag.SurveyName;
}
@{
    Layout = "_Layoutgiver.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Create/","SurveyQuestions")) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SurveyQuestion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (SurveyIDs.GetType() == typeof(int))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.SurveyID, "Survey", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @SurveyName
                    <input type="hidden" , name="SurveyID" value="@SurveyIDs" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.SurveyID, "SurveyID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control" id="SurveyID" name="SurveyID">
                        @foreach (WebApplication4.Models.Survey s in SurveyIDs.Items)
                        {
                            <option value="@s.SurveyID">@s.Name</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.SurveyID, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionTypeID, "QuestionTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("QuestionTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.QuestionTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
